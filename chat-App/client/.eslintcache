[{"E:\\Projects\\chat-App\\client\\src\\index.js":"1","E:\\Projects\\chat-App\\client\\src\\reportWebVitals.js":"2","E:\\Projects\\chat-App\\client\\src\\App.js":"3","E:\\Projects\\chat-App\\client\\src\\UserContext.js":"4","E:\\Projects\\chat-App\\client\\src\\components\\chat\\Chat.js":"5","E:\\Projects\\chat-App\\client\\src\\components\\home\\Home.js":"6","E:\\Projects\\chat-App\\client\\src\\components\\layout\\Navbar.js":"7","E:\\Projects\\chat-App\\client\\src\\components\\home\\RoomList.js":"8","E:\\Projects\\chat-App\\client\\src\\components\\home\\Room.js":"9","E:\\Projects\\chat-App\\client\\src\\components\\chat\\messages\\Messages.js":"10","E:\\Projects\\chat-App\\client\\src\\components\\chat\\message\\Message.js":"11","E:\\Projects\\chat-App\\client\\src\\components\\chat\\input\\Input.js":"12","E:\\Projects\\chat-App\\client\\src\\components\\auth\\Signup.js":"13","E:\\Projects\\chat-App\\client\\src\\components\\auth\\Login.js":"14","E:\\Projects\\chat-App\\client\\src\\components\\layout\\SignedInMenu.js":"15","E:\\Projects\\chat-App\\client\\src\\components\\layout\\SignedOutMenu.js":"16"},{"size":500,"mtime":1609764052731,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1609764073887,"results":"19","hashOfConfig":"18"},{"size":1370,"mtime":1609764033523,"results":"20","hashOfConfig":"18"},{"size":87,"mtime":1609307356194,"results":"21","hashOfConfig":"18"},{"size":1696,"mtime":1609764182437,"results":"22","hashOfConfig":"18"},{"size":3330,"mtime":1609764319717,"results":"23","hashOfConfig":"18"},{"size":1355,"mtime":1609764403941,"results":"24","hashOfConfig":"18"},{"size":430,"mtime":1609764360490,"results":"25","hashOfConfig":"18"},{"size":342,"mtime":1609764335117,"results":"26","hashOfConfig":"18"},{"size":442,"mtime":1609764272978,"results":"27","hashOfConfig":"18"},{"size":680,"mtime":1609764251725,"results":"28","hashOfConfig":"18"},{"size":609,"mtime":1609764229157,"results":"29","hashOfConfig":"18"},{"size":3369,"mtime":1609764149677,"results":"30","hashOfConfig":"18"},{"size":2856,"mtime":1609764130539,"results":"31","hashOfConfig":"18"},{"size":182,"mtime":1609764508020,"results":"32","hashOfConfig":"18"},{"size":243,"mtime":1609764561044,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1eqw2qp",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"E:\\Projects\\chat-App\\client\\src\\index.js",[],["72","73"],"E:\\Projects\\chat-App\\client\\src\\reportWebVitals.js",[],"E:\\Projects\\chat-App\\client\\src\\App.js",[],"E:\\Projects\\chat-App\\client\\src\\UserContext.js",[],"E:\\Projects\\chat-App\\client\\src\\components\\chat\\Chat.js",["74","75","76","77","78"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { UserContext } from '../../UserContext';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport Messages from './messages/Messages';\r\nimport Input from './input/Input';\r\nimport './Chat.css';\r\nlet socket;\r\nconst Chat = () => {\r\n    const ENDPT = 'localhost:5000';\r\n\r\n    const { user, setUser } = useContext(UserContext);\r\n    let { room_id, room_name } = useParams();\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    useEffect(() => {\r\n        socket = io(ENDPT);\r\n        socket.emit('join', { name: user.name, room_id, user_id: user._id })\r\n    }, [])\r\n    useEffect(() => {\r\n        socket.on('message', message => {\r\n            setMessages([...messages, message])\r\n        })\r\n    }, [messages])\r\n    useEffect(() => {\r\n        socket.emit('get-messages-history', room_id)\r\n        socket.on('output-messages', messages => {\r\n            setMessages(messages)\r\n        })\r\n    }, [])\r\n    const sendMessage = event => {\r\n        event.preventDefault();\r\n        if (message) {\r\n            console.log(message)\r\n            socket.emit('sendMessage', message, room_id, () => setMessage(''))\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"outerContainer\">\r\n            <div className=\"container\">\r\n                <Messages messages={messages} user_id={user._id} />\r\n                <Input\r\n                    message={message}\r\n                    setMessage={setMessage}\r\n                    sendMessage={sendMessage}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","E:\\Projects\\chat-App\\client\\src\\components\\home\\Home.js",["79","80"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { UserContext } from '../../UserContext';\r\nimport { Redirect } from 'react-router-dom';\r\nimport RoomList from './RoomList';\r\nimport io from 'socket.io-client';\r\nlet socket;\r\nconst Home = () => {\r\n    const { user, setUser } = useContext(UserContext);\r\n    const [room, setRoom] = useState('');\r\n    const [rooms, setRooms] = useState([]);\r\n    const ENDPT = 'localhost:5000';\r\n    useEffect(() => {\r\n        socket = io(ENDPT);\r\n        return () => {\r\n            socket.emit('disconnect');\r\n            socket.off();\r\n        }\r\n    }, [ENDPT])\r\n    useEffect(() => {\r\n        socket.on('output-rooms', rooms => {\r\n            setRooms(rooms)\r\n        })\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n        socket.on('room-created', room => {\r\n            setRooms([...rooms, room])\r\n        })\r\n    }, [rooms])\r\n    useEffect(() => {\r\n        console.log(rooms)\r\n    }, [rooms])\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        socket.emit('create-room', room);\r\n        console.log(room);\r\n        setRoom('');\r\n\r\n    }\r\n\r\n    const setAsJohn = () => {\r\n        const john = {\r\n            name: 'John',\r\n            email: 'john@email.com',\r\n            password: '123',\r\n            id: '123'\r\n        }\r\n        setUser(john);\r\n    }\r\n    const setAsTom = () => {\r\n        const tom = {\r\n            name: 'Tom',\r\n            email: 'tom@email.com',\r\n            password: '456',\r\n            id: '456'\r\n        }\r\n        setUser(tom);\r\n    }\r\n    if (!user) {\r\n        return <Redirect to='/login' />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6\">\r\n                    <div className=\"card blue-grey darken-1\">\r\n                        <div className=\"card-content white-text\">\r\n                            <span className=\"card-title\">Welcome {user ? user.name : ''}</span>\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <input\r\n                                            placeholder=\"Enter a room name\"\r\n                                            id=\"room\" type=\"text\" className=\"validate\"\r\n                                            value={room}\r\n                                            onChange={e => setRoom(e.target.value)}\r\n                                        />\r\n                                        <label htmlFor=\"room\">Room</label>\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn\">Create Room</button>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"card-action\">\r\n                            <a href=\"#\" onClick={setAsJohn}>set as John</a>\r\n                            <a href=\"#\" onClick={setAsTom}>set as Tom</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col s6 m5 offset-1\">\r\n                    <RoomList rooms={rooms} />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","E:\\Projects\\chat-App\\client\\src\\components\\layout\\Navbar.js",["81"],"import React, { useContext } from 'react'\r\nimport { UserContext } from '../../UserContext';\r\nimport SignedInMenu from './SignedInMenu';\r\nimport SignedOutMenu from './SignedOutMenu';\r\nconst Navbar = () => {\r\n    const { user, setUser } = useContext(UserContext);\r\n\r\n    const logout = async () => {\r\n        try {\r\n            const res = await fetch('http://localhost:5000/logout', {\r\n                credentials: 'include',\r\n            });\r\n            const data = res.json();\r\n            console.log('logout data', data);\r\n            setUser(null)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n    const menu = user ? <SignedInMenu logout={logout} /> : <SignedOutMenu />\r\n    return (\r\n        <>\r\n            <nav className=\"green\">\r\n                <div className=\"nav-wrapper\">\r\n                    <a href=\"/\" className=\"brand-logo\">Chat</a>\r\n                    <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n\r\n\r\n                    <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                        {menu}\r\n\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            <ul className=\"sidenav\" id=\"mobile-demo\">\r\n                {menu}\r\n            </ul>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","E:\\Projects\\chat-App\\client\\src\\components\\home\\RoomList.js",[],"E:\\Projects\\chat-App\\client\\src\\components\\home\\Room.js",[],"E:\\Projects\\chat-App\\client\\src\\components\\chat\\messages\\Messages.js",[],"E:\\Projects\\chat-App\\client\\src\\components\\chat\\message\\Message.js",[],"E:\\Projects\\chat-App\\client\\src\\components\\chat\\input\\Input.js",[],"E:\\Projects\\chat-App\\client\\src\\components\\auth\\Signup.js",[],"E:\\Projects\\chat-App\\client\\src\\components\\auth\\Login.js",["82","83"],"import React, { useState, useContext } from 'react'\r\nimport { UserContext } from '../../UserContext';\r\nimport { Redirect } from 'react-router-dom';\r\nconst Login = () => {\r\n    const { user, setUser } = useContext(UserContext);\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [nameError, setNameError] = useState('')\r\n    const [emailError, setEmailError] = useState('')\r\n    const [passwordError, setPasswordError] = useState('')\r\n    const submitHandler = async e => {\r\n        e.preventDefault();\r\n        setEmailError('');\r\n        setNameError('');\r\n        setPasswordError('');\r\n        console.log(name, email, password)\r\n        try {\r\n            const res = await fetch('http://localhost:5000/login', {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: JSON.stringify({ name, email, password }),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            });\r\n            const data = await res.json();\r\n            console.log(data)\r\n            if (data.errors) {\r\n                setEmailError(data.errors.email);\r\n                setNameError(data.errors.name);\r\n                setPasswordError(data.errors.password);\r\n\r\n            }\r\n            if (data.user) {\r\n                setUser(data.user)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    if (user) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n\r\n        <div className=\"row\">\r\n            <h2>Login</h2>\r\n            <form className=\"col s12\" onSubmit={submitHandler}>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                        <input id=\"email\" type=\"email\" className=\"validate\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                        <div className=\"email error red-text\">{emailError}</div>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                        <input id=\"password\" type=\"password\" className=\"validate\"\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                        <div className=\"password error red-text\">{passwordError}</div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"btn\">Login</button>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Login\r\n","E:\\Projects\\chat-App\\client\\src\\components\\layout\\SignedInMenu.js",["84"],"import React from 'react'\r\n\r\nconst SignedInMenu = ({ logout }) => {\r\n    return (\r\n        <li onClick={logout}><a href=\"#\">Logout</a></li>\r\n    )\r\n}\r\n\r\nexport default SignedInMenu\r\n","E:\\Projects\\chat-App\\client\\src\\components\\layout\\SignedOutMenu.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":14},{"ruleId":"89","severity":1,"message":"93","line":12,"column":19,"nodeType":"91","messageId":"92","endLine":12,"endColumn":26},{"ruleId":"89","severity":1,"message":"94","line":13,"column":20,"nodeType":"91","messageId":"92","endLine":13,"endColumn":29},{"ruleId":"95","severity":1,"message":"96","line":19,"column":8,"nodeType":"97","endLine":19,"endColumn":10,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":30,"column":8,"nodeType":"97","endLine":30,"endColumn":10,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":86,"column":29,"nodeType":"103","endLine":86,"endColumn":61},{"ruleId":"101","severity":1,"message":"102","line":87,"column":29,"nodeType":"103","endLine":87,"endColumn":60},{"ruleId":"101","severity":1,"message":"102","line":27,"column":21,"nodeType":"103","endLine":27,"endColumn":87},{"ruleId":"89","severity":1,"message":"104","line":7,"column":18,"nodeType":"91","messageId":"92","endLine":7,"endColumn":25},{"ruleId":"89","severity":1,"message":"105","line":10,"column":12,"nodeType":"91","messageId":"92","endLine":10,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":5,"column":30,"nodeType":"103","endLine":5,"endColumn":42},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","'room_name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'room_id', 'user._id', and 'user.name'. Either include them or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'room_id'. Either include it or remove the dependency array.",["109"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setName' is assigned a value but never used.","'nameError' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [room_id, user._id, user.name]",{"range":"114","text":"115"},"Update the dependencies array to be: [room_id]",{"range":"116","text":"117"},[721,723],"[room_id, user._id, user.name]",[1056,1058],"[room_id]"]