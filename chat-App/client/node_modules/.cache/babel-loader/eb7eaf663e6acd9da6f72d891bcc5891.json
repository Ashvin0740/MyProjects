{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Projects\\\\chat-App\\\\client\\\\src\\\\components\\\\chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { UserContext } from '../../UserContext';\nimport { Link, useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nlet socket;\n\nconst Chat = () => {\n  _s();\n\n  const ENDPT = 'localhost:5000';\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  let {\n    room_id,\n    room_name\n  } = useParams();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket = io(ENDPT);\n    socket.emit('join', {\n      name: user.name,\n      room_id,\n      user_id: user.id\n    });\n  }, []);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      console.log(message);\n      socket.emit('sendMessage', message, room_id, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [room_id, \" \", room_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Chat \", JSON.stringify(user)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(messages, null, '\\t')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: event => setMessage(event.target.value),\n        onKeyPress: event => event.key === 'Enter' ? sendMessage(event) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"IxDjyQrGAqeP6ZP0fi1GHCy+lDo=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["E:/Projects/chat-App/client/src/components/chat/Chat.js"],"names":["React","useContext","useEffect","useState","UserContext","Link","useParams","io","socket","Chat","ENDPT","user","setUser","room_id","room_name","message","setMessage","messages","setMessages","emit","name","user_id","id","on","sendMessage","event","preventDefault","console","log","JSON","stringify","target","value","key"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,KAAK,GAAG,gBAAd;AAEA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBX,UAAU,CAACG,WAAD,CAApC;AACA,MAAI;AAAES,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAyBR,SAAS,EAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,MAAM,GAAGD,EAAE,CAACG,KAAD,CAAX;AACAF,IAAAA,MAAM,CAACW,IAAP,CAAY,MAAZ,EAAoB;AAAEC,MAAAA,IAAI,EAAET,IAAI,CAACS,IAAb;AAAmBP,MAAAA,OAAnB;AAA4BQ,MAAAA,OAAO,EAAEV,IAAI,CAACW;AAA1C,KAApB;AACH,GAHQ,EAGN,EAHM,CAAT;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,MAAM,CAACe,EAAP,CAAU,SAAV,EAAqBR,OAAO,IAAI;AAC5BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT;;AAKA,QAAMO,WAAW,GAAGC,KAAK,IAAI;AACzBA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIX,OAAJ,EAAa;AACTY,MAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACAP,MAAAA,MAAM,CAACW,IAAP,CAAY,aAAZ,EAA2BJ,OAA3B,EAAoCF,OAApC,EAA6C,MAAMG,UAAU,CAAC,EAAD,CAA7D;AACH;AACJ,GAND;;AAOA,sBACI;AAAA,4BACI;AAAA,iBAAMH,OAAN,OAAgBC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,0BAAUe,IAAI,CAACC,SAAL,CAAenB,IAAf,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAMkB,IAAI,CAACC,SAAL,CAAeb,QAAf,EAAyB,IAAzB,EAA+B,IAA/B;AAAN;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,QAAQ,EAAEO,WAA1B;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACI,QAAA,KAAK,EAAET,OADX;AAEI,QAAA,QAAQ,EAAEU,KAAK,IAAIT,UAAU,CAACS,KAAK,CAACM,MAAN,CAAaC,KAAd,CAFjC;AAGI,QAAA,UAAU,EAAEP,KAAK,IAAIA,KAAK,CAACQ,GAAN,KAAc,OAAd,GAAwBT,WAAW,CAACC,KAAD,CAAnC,GAA6C;AAHtE;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAtCD;;GAAMhB,I;UAI2BH,S;;;KAJ3BG,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { UserContext } from '../../UserContext';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\n\r\nlet socket;\r\nconst Chat = () => {\r\n    const ENDPT = 'localhost:5000';\r\n\r\n    const { user, setUser } = useContext(UserContext);\r\n    let { room_id, room_name } = useParams();\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    useEffect(() => {\r\n        socket = io(ENDPT);\r\n        socket.emit('join', { name: user.name, room_id, user_id: user.id })\r\n    }, [])\r\n    useEffect(() => {\r\n        socket.on('message', message => {\r\n            setMessages([...messages, message])\r\n        })\r\n    }, [messages])\r\n    const sendMessage = event => {\r\n        event.preventDefault();\r\n        if (message) {\r\n            console.log(message)\r\n            socket.emit('sendMessage', message, room_id, () => setMessage(''))\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div>{room_id} {room_name}</div>\r\n            <h1>Chat {JSON.stringify(user)}</h1>\r\n            <pre>{JSON.stringify(messages, null, '\\t')}</pre>\r\n            <form action=\"\" onSubmit={sendMessage}>\r\n                <input type=\"text\"\r\n                    value={message}\r\n                    onChange={event => setMessage(event.target.value)}\r\n                    onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\r\n                />\r\n                <button>Send Message</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}