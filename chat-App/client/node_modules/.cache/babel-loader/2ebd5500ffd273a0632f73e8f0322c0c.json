{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Projects\\\\chat-App\\\\client\\\\src\\\\components\\\\chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { UserContext } from '../../UserContext';\nimport { Link, useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport Messages from './messages/Messages';\nlet socket;\n\nconst Chat = () => {\n  _s();\n\n  const ENDPT = 'localhost:5000';\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  let {\n    room_id,\n    room_name\n  } = useParams();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket = io(ENDPT);\n    socket.emit('join', {\n      name: user.name,\n      room_id,\n      user_id: user.id\n    });\n  }, []);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n  useEffect(() => {\n    socket.emit('get-messages-history', room_id);\n    socket.on('output-messages', messages => {\n      setMessages(messages);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      console.log(message);\n      socket.emit('sendMessage', message, room_id, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Messages, {\n      messages: messages,\n      user_id: user.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"G9l5j+T7kY80GKTOPB1Y5AGzpVM=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["E:/Projects/chat-App/client/src/components/chat/Chat.js"],"names":["React","useContext","useEffect","useState","UserContext","Link","useParams","io","Messages","socket","Chat","ENDPT","user","setUser","room_id","room_name","message","setMessage","messages","setMessages","emit","name","user_id","id","on","sendMessage","event","preventDefault","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,IAAIC,MAAJ;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,KAAK,GAAG,gBAAd;AAEA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBZ,UAAU,CAACG,WAAD,CAApC;AACA,MAAI;AAAEU,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAyBT,SAAS,EAAtC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,GAAGF,EAAE,CAACI,KAAD,CAAX;AACAF,IAAAA,MAAM,CAACW,IAAP,CAAY,MAAZ,EAAoB;AAAEC,MAAAA,IAAI,EAAET,IAAI,CAACS,IAAb;AAAmBP,MAAAA,OAAnB;AAA4BQ,MAAAA,OAAO,EAAEV,IAAI,CAACW;AAA1C,KAApB;AACH,GAHQ,EAGN,EAHM,CAAT;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,CAACe,EAAP,CAAU,SAAV,EAAqBR,OAAO,IAAI;AAC5BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,CAACW,IAAP,CAAY,sBAAZ,EAAoCN,OAApC;AACAL,IAAAA,MAAM,CAACe,EAAP,CAAU,iBAAV,EAA6BN,QAAQ,IAAI;AACrCC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;;AAMA,QAAMO,WAAW,GAAGC,KAAK,IAAI;AACzBA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIX,OAAJ,EAAa;AACTY,MAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACAP,MAAAA,MAAM,CAACW,IAAP,CAAY,aAAZ,EAA2BJ,OAA3B,EAAoCF,OAApC,EAA6C,MAAMG,UAAU,CAAC,EAAD,CAA7D;AACH;AACJ,GAND;;AAOA,sBACI;AAAA,2BAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEC,QAApB;AAA8B,MAAA,OAAO,EAAEN,IAAI,CAACW;AAA5C;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CApCD;;GAAMb,I;UAI2BJ,S;;;KAJ3BI,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { UserContext } from '../../UserContext';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport Messages from './messages/Messages';\r\nlet socket;\r\nconst Chat = () => {\r\n    const ENDPT = 'localhost:5000';\r\n\r\n    const { user, setUser } = useContext(UserContext);\r\n    let { room_id, room_name } = useParams();\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    useEffect(() => {\r\n        socket = io(ENDPT);\r\n        socket.emit('join', { name: user.name, room_id, user_id: user.id })\r\n    }, [])\r\n    useEffect(() => {\r\n        socket.on('message', message => {\r\n            setMessages([...messages, message])\r\n        })\r\n    }, [messages])\r\n    useEffect(() => {\r\n        socket.emit('get-messages-history', room_id)\r\n        socket.on('output-messages', messages => {\r\n            setMessages(messages)\r\n        })\r\n    }, [])\r\n    const sendMessage = event => {\r\n        event.preventDefault();\r\n        if (message) {\r\n            console.log(message)\r\n            socket.emit('sendMessage', message, room_id, () => setMessage(''))\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Messages messages={messages} user_id={user.id} />\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}